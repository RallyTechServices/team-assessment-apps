<!DOCTYPE html>
<html>
<head>
    <title>Project Update App</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Tue Nov 14 2017 08:10:27 GMT-0700 (MST) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Tue Nov 14 2017 08:10:27 GMT-0700 (MST)";
        var STORY    = "F319";
        var BUILDER  = "corkr03";
        var CHECKSUM = 6622077675;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("CA.technicalservices.userutilities.FieldPicker",{alias:"widget.fieldpickerbutton",extend:"Rally.ui.Button",requires:["Rally.ui.popover.Popover","Rally.ui.Button","Rally.ui.picker.FieldPicker","Ext.state.Manager"],toolTipConfig:{html:"Show Columns",anchor:"top"},iconCls:"icon-add-column",cls:"field-picker-btn secondary rly-small",alwaysSelectedValues:["Name","ObjectID"],fieldBlackList:[],fieldPickerConfig:{},buttonConfig:{},modelNames:["Project"],rankingEnabled:!1,margin:"3 9 0 0",constructor:function(a){this.config=_.merge({},this.config||{},a||{}),this.callParent([a])},initComponent:function(){if(this.models)return this.on("click",this._createPopover,this),void this.callParent(arguments);if(this.context&&this.modelNames&&this.modelNames.length>0)Rally.data.ModelFactory.getModels({types:this.modelNames,context:this.context,success:function(a){this.models=a},failure:function(a){console.log("failedparam")},scope:this}),this.on("click",this._createPopover,this);else{this.iconCls="icon-none";var a="Please update the CA.technicalservices.FieldPicker configuration with modelNames and context";this.toolTipConfig={html:'<div style="color:red;">'+a+"</div>"},this.on("click",function(){Rally.ui.notify.Notifier.showError({message:a})})}this.callParent(arguments)},getFields:function(){return this._fields||this.alwaysSelectedValues},_getPickerConfig:function(){var a;return a=_.extend({value:this._fields,fieldBlackList:this.fieldBlackList,alwaysSelectedValues:this.alwaysSelectedValues,context:this.context},this.fieldPickerConfig)},_createPopover:function(a){var b=a.getEl();this.popover=Ext.create("Rally.ui.popover.Popover",{target:b,placement:["bottom","left","top","right"],cls:"field-picker-popover",toFront:Ext.emptyFn,buttonAlign:"center",title:this.getTitle(),listeners:{destroy:function(){this.popover=null},scope:this},buttons:[{xtype:"rallybutton",text:"Apply",cls:"field-picker-apply-btn primary rly-small",listeners:{click:function(){this._onApply(this.popover)},scope:this}},{xtype:"rallybutton",text:"Cancel",cls:"field-picker-cancel-btn secondary dark rly-small",listeners:{click:function(){this.popover.close()},scope:this}}],items:[_.extend({xtype:"rallyfieldpicker",cls:"field-picker",itemId:"fieldpicker",modelTypes:this._getModelTypes(),alwaysExpanded:!0,width:200,emptyText:"Search",selectedTextLabel:"Selected",availableTextLabel:"Available",listeners:{specialkey:function(a,b){b.getKey()===b.ESC&&this.popover.close()},scope:this}},this._getPickerConfig())]})},_getModelTypes:function(){return _.pluck(this._getModels(),"typePath")},_getModels:function(){return _.reduce(this.models,function(a,b){return"artifact"===b.typePath?a=a.concat(b.getArtifactComponentModels()):a.push(b),a},[])},getTitle:function(){return"Show Columns"},updateFields:function(a,b){this._fields=a,this.popover&&this.popover.down("rallyfieldpicker")&&this.popover.down("rallyfieldpicker").setValue(a.join(",")),this.saveState()},getState:function(){return{fields:this._fields}},applyState:function(a){a&&(this._fields=a.fields)},_onApply:function(a){var b=a.down("rallyfieldpicker"),c=_.map(b.getValue(),function(a){return a.get("name")});this.updateFields(c),a.close(),this.fireEvent("fieldsupdated",c)}}),Ext.override(Rally.ui.grid.CheckboxModel,{_recordIsSelectable:function(a){return"project"===a.get("_type")}}),Ext.override(Rally.ui.grid.RowActionColumn,{_renderGearIcon:function(a,b,c){b.tdCls=Rally.util.Test.toBrowserTestCssClass("row-action",Rally.util.Ref.getOidFromRef(c.get("_ref")));var d='<div class="row-action-icon icon-gear"/>';return d}}),Ext.override(Rally.ui.menu.bulk.Edit,{config:{predicate:function(a){return!0}}}),Ext.define("CA.technicalservices.userutilities.ProjectUtility",{initialize:function(a){var b=Ext.create("Deft.Deferred");return this.fetchProjectsInWorkspace(a.getWorkspace().ObjectID).then({success:function(a){this.initializeRecords(a),b.resolve(this)},failure:function(a){b.reject(a)},scope:this}),b},getAllProjects:function(){return Ext.Object.getValues(this.projectHash)},fetchProjectsInWorkspace:function(a){var b=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:"Project",fetch:["ObjectID","Name","Parent","Workspace"],limit:1/0,context:{workspace:"/workspace/"+a,project:null},compact:!1,filters:[{property:"State",value:"Open"}],sorters:[{property:"ObjectID",direction:"ASC"}]}).load({callback:function(c,d){d.wasSuccessful()?b.resolve(c):b.reject("Error loading project structure for workspace "+a+": "+d.error.errors.join(","))}}),b.promise},initializeRecords:function(a){var b={},c=[];Ext.Array.each(a,function(a){b[a.get("ObjectID")]=a.getData(),b[a.get("ObjectID")].children=[]}),Ext.Object.each(b,function(a,d){d.__projectHierarchy=this._buildProjectHierarchy(a,b);var e=d.Parent&&d.Parent.ObjectID||null;if(e&&b[e]){var f=b[e];f.children.push(d)}else c.push(d)},this),this.projectHash=b,this.rootProjects=c},getProjectTreeData:function(){var a=JSON.parse(JSON.stringify(this.rootProjects));return a},getProjectHierarchy:function(a){var b=this.projectHash[a]&&this.projectHash[a].__projectHierarchy,c=[];return Ext.Array.each(b,function(a){c.push(this.projectHash[a].Name)},this),c.join(" | ")},_buildProjectHierarchy:function(a,b){var c=b[a].Parent&&b[a].Parent.ObjectID||null,d=[a];if(c)do d.unshift(c),c=b[c]&&b[c].Parent&&b[c].Parent.ObjectID||null;while(c);return d}}),Ext.define("project-update-app",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",tpl:"Hello, <tpl>{_refObjectName}</tpl>"},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"project-update-app"},launch:function(){this.setLoading("Loading Projects..."),this.projectUtility=Ext.create("CA.technicalservices.userutilities.ProjectUtility"),this.projectUtility.initialize(this.getContext()).then({success:this._initializeApp,failure:this._showErrorNotification,scope:this}).always(function(){this.setLoading(!1)},this)},_addBoxes:function(){this.removeAll();var a=this.add({xtype:"container",region:"north"});a.add({xtype:"container",itemId:"selectorBox",layout:"hbox"}),a.add({xtype:"container",itemId:"advancedFilterBox",flex:1}),this.add({xtype:"container",itemId:"gridBox",region:"center",layout:"fit"})},_initializeApp:function(a){this.projectUtility=a,this.logger.log("_initializeApp",a),this._addBoxes();var b=this.down("#selectorBox"),c=b.add({xtype:"fieldpickerbutton",modelNames:["Project"],context:this.getContext(),margin:"10 5 10 5",stateful:!0,stateId:"grid-columns"});c.on("fieldsupdated",this.updateStoreFields,this),b.add({xtype:"rallyinlinefilterbutton",modelNames:["Project"],context:this.getContext(),margin:"10 5 10 5",stateful:!0,stateId:"grid-filters-3",listeners:{inlinefilterready:this.addInlineFilterPanel,inlinefilterchange:this.updateGridFilters,scope:this}}),this.buildGrid()},addInlineFilterPanel:function(a){this.down("#advancedFilterBox").add(a)},updateStoreFields:function(a){this.buildGrid()},updateGridFilters:function(a){this.logger.log("updateGridFilters",a),this.down("#selectorBox").doLayout(),this.buildGrid()},buildGrid:function(){this.down("#gridBox").removeAll();var a=this.down("fieldpickerbutton").getFields()||void 0;this.down("#gridBox").add({xtype:"rallygrid",store:Ext.create("Rally.data.wsapi.Store",{model:"Project",fetch:a,filters:this.getFilters()}),columnCfgs:this._getColumnCfgs(a),enableBulkEdit:!0})},getFilters:function(){var a=null,b=this.down("rallyinlinefilterbutton");return b&&b.inlineFilterPanel&&b.getWsapiFilter()&&(a=b.getWsapiFilter()),a=a?a.and({property:"State",value:"Open"}):[{property:"State",value:"Open"}],a||[]},_getColumnCfgs:function(a){var b=this.projectUtility,c=[{dataIndex:"Name",text:"Name",flex:1},{dataIndex:"ObjectID",text:"Project Path",flex:2,align:"left",renderer:function(a){return b.getProjectHierarchy(a)}}];return Ext.Array.each(a,function(a){if("Name"!==a&&"ObjectID"!==a){var b=a.replace("c_","");c.push({dataIndex:a,text:b})}}),c},_showErrorNotification:function(a){this.logger.log("_showErrorNotification",a),Rally.ui.notify.Notifier.showError({message:a})},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('project-update-app', {
                   name: 'Project Update App'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>